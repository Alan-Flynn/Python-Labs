matrix = [[0,106,517,542,176,377,412,511,214,535,29,39,103,580,26,438,243,513,401,396],
[106,0,262,490,507,633,38,22,84,540,562,138,80,47,522,183,495,465,574,156],
[517,262,0,629,490,42,216,143,427,524,56,118,5,483,519,554,535,576,297,140],
[542,490,629,0,560,44,358,262,649,607,42,339,421,33,393,262,531,289,98,32],
[176,507,490,560,0,35,216,242,171,626,326,121,370,215,550,51,457,322,335,83],
[377,633,42,44,35,0,619,607,538,240,357,388,649,313,23,588,361,478,272,554],
[412,38,216,358,216,619,0,75,128,641,86,380,323,193,430,327,151,370,579,570],
[511,22,143,262,242,607,75,0,506,52,336,283,291,270,290,587,250,497,90,574],
[214,84,427,649,171,538,128,506,0,254,272,130,349,305,192,370,49,570,163,497],
[535,540,524,607,626,240,641,52,254,0,214,607,605,200,200,267,227,71,606,184],
[29,562,56,42,326,357,86,336,272,214,0,379,574,193,497,287,495,250,157,328],
[39,138,118,339,121,388,380,283,130,607,379,0,566,573,80,139,5,404,261,631],
[103,80,5,421,370,649,323,291,349,605,574,566,0,466,252,236,448,427,533,632],
[580,47,483,33,215,313,193,270,305,200,193,573,466,0,184,479,287,176,49,306],
[26,522,519,393,550,23,430,290,192,200,497,80,252,184,0,15,464,123,414,305],
[438,183,554,262,51,588,327,587,370,267,287,139,236,479,15,0,319,41,152,560],
[243,495,535,531,457,361,151,250,49,227,495,5,448,287,464,319,0,538,286,199],
[513,465,576,289,322,478,370,497,570,71,250,404,427,176,123,41,538,0,517,378],
[401,574,297,98,335,272,579,90,163,606,157,261,533,49,414,152,286,517,0,243],
[396,156,140,32,83,554,570,574,497,184,328,631,632,306,305,560,199,378,243,0]]

shortest_distance = matrix[0][1] + matrix[13][0]

i = int(input("Enter city number 1 between 1 and 20: "))
j = int(input("Enter city number 2 between 1 and 20: "))

my_list = []
#my_list stores all the total distances that have to be travelled to each of the 20 cities for the two parties

for index in range(0, 20):
    my_list.append(matrix[i - 1][index] + matrix[j - 1][index])
    min_distance = min(my_list)
    #min_distance is the least distance that has to be travelled for both parties
    city_index = my_list.index(min_distance)
    #city_index is the index of the city with the least total travel time
    
print("City", city_index + 1, "is the city that would involve the least total journey time for both parties from cities", i, "and", j, ".", sep =' ')
    
